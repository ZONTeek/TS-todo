{"version":3,"sources":["Navbar.tsx","pages/AboutPage.tsx","ToDoForm.tsx","TodoList.tsx","pages/TodoPage.tsx","App.tsx","reportWebVitals.ts","index.tsx"],"names":["Navbar","className","href","to","AboutPage","history","useHistory","Fragment","onClick","push","ToDoForm","props","ref","useRef","id","type","placeholder","onKeyPress","event","key","addTodo","current","value","htmlFor","TodoList","todos","toggleTodo","remove","map","todo","classes","completed","join","checked","onChange","bind","title","e","preventDefault","TodoPage","useState","setTodos","useEffect","saved","JSON","parse","localStorage","getItem","setItem","stringify","newTodo","Date","now","prev","confirm","filter","App","component","path","exact","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.7db69768.chunk.js","sourcesContent":["import React from \"react\";\r\nimport { NavLink } from \"react-router-dom\";\r\n\r\nexport const Navbar: React.FC = () => (\r\n  <nav>\r\n    <div className=\"nav-wrapper purple darken-3\">\r\n      <a href=\"/\" className=\"brand-logo\">\r\n        React typescript\r\n      </a>\r\n      <ul className=\"right hide-on-med-and-down\">\r\n        <li>\r\n          <NavLink to=\"/about\">О нас</NavLink>\r\n        </li>\r\n        <li>\r\n          <NavLink to=\"/\">To do</NavLink>\r\n        </li>\r\n      </ul>\r\n    </div>\r\n  </nav>\r\n);\r\n","import React from \"react\";\r\nimport { useHistory } from \"react-router-dom\";\r\n\r\nexport const AboutPage: React.FC = () => {\r\n    const history = useHistory();\r\n  return (\r\n    <React.Fragment>\r\n      <h1>Информация</h1>\r\n      <p>\r\n        Lorem ipsum dolor sit amet consectetur adipisicing elit. Sed maiores\r\n        soluta exercitationem deleniti nulla officiis vero itaque qui velit\r\n        ipsum.\r\n      </p>\r\n      <button className={\"btn\"} onClick={()=> history.push(\"/TS-todo/\")}>To todos</button>\r\n    </React.Fragment>\r\n  );\r\n};\r\n","import React from \"react\";\r\nimport { useRef } from \"react\";\r\n\r\ninterface TodoFormProps {\r\n    addTodo(title:string):void\r\n}\r\n\r\nexport const ToDoForm: React.FC<TodoFormProps> = (props) => {\r\n\r\n  const ref = useRef<HTMLInputElement>(null);\r\n  const keyPressHandler = (event: React.KeyboardEvent) => {\r\n    if (event.key === \"Enter\") {\r\n      props.addTodo(ref.current!.value)\r\n      ref.current!.value = \"\";\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"input-field mt2\">\r\n      <input\r\n        ref={ref}\r\n        id=\"title\"\r\n        type=\"text\"\r\n        placeholder=\"Введите дело\"\r\n        onKeyPress={keyPressHandler}\r\n      />\r\n      <label htmlFor=\"title\" className=\"active\">\r\n        Введите дело\r\n      </label>\r\n    </div>\r\n  );\r\n};\r\n","import React from \"react\";\r\nimport { ITodo } from \"./interfaces\";\r\n\r\ntype TodoListProps = {\r\n  todos: ITodo[];\r\n  toggleTodo(id: number): void;\r\n  remove: (id: number) => void;\r\n};\r\n\r\nexport const TodoList: React.FC<TodoListProps> = ({\r\n  todos,\r\n  toggleTodo,\r\n  remove,\r\n}) => {\r\n  const removeHandler = (event: React.MouseEvent, id: number) => {\r\n    event.preventDefault();\r\n    remove(id);\r\n  };\r\n\r\n  return (\r\n    <ul>\r\n      {todos.map((todo) => {\r\n        const classes = [\"todo\"];\r\n        if (todo.completed) classes.push(\"completed\");\r\n        return (\r\n          <li className={classes.join(\" \")} key={todo.id}>\r\n            <label>\r\n              <input\r\n                type=\"checkbox\"\r\n                checked={todo.completed}\r\n                onChange={toggleTodo.bind(null, todo.id)}\r\n              />\r\n              <span>{todo.title}</span>\r\n              <i\r\n                className=\"material-icons red-text\"\r\n                onClick={(e) => removeHandler(e,todo.id)}\r\n              >\r\n                delete\r\n              </i>\r\n            </label>\r\n          </li>\r\n        );\r\n      })}\r\n    </ul>\r\n  );\r\n};\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { ToDoForm } from \"../ToDoForm\";\r\nimport { TodoList } from \"../TodoList\";\r\nimport { ITodo } from \"../interfaces\";\r\n\r\ndeclare var confirm: (question: string) => boolean;\r\n\r\nexport const TodoPage: React.FC = () => {\r\n  const [todos, setTodos] = useState<ITodo[]>([]);\r\n  useEffect(() => {\r\n    const saved = JSON.parse(localStorage.getItem(\"todos\") || \"[]\") as ITodo[];\r\n    setTodos(saved);\r\n  }, []);\r\n  useEffect(() => {\r\n    localStorage.setItem(\"todos\", JSON.stringify(todos));\r\n  }, [todos]);\r\n\r\n  const addTodo = (title: string) => {\r\n    const newTodo: ITodo = {\r\n      id: Date.now(),\r\n      title: title,\r\n      completed: false,\r\n    };\r\n    setTodos((prev) => [newTodo, ...prev]);\r\n  };\r\n  const toggleTodo = (id: number) => {\r\n    setTodos((prev) =>\r\n      prev.map((todo) => {\r\n        if (todo.id === id)\r\n          return {\r\n            ...todo,\r\n            completed: !todo.completed,\r\n          };\r\n        return todo;\r\n      })\r\n    );\r\n  };\r\n  const removeTodo = (id: number) => {\r\n    const shouldRemove = confirm(\"Are you sure?\");\r\n    if (shouldRemove) setTodos((prev) => prev.filter((todo) => todo.id !== id));\r\n  };\r\n  return (\r\n    <>\r\n      <ToDoForm addTodo={addTodo} />\r\n      <TodoList todos={todos} toggleTodo={toggleTodo} remove={removeTodo} />\r\n    </>\r\n  );\r\n};\r\n","import React from \"react\";\nimport {BrowserRouter, Switch, Route} from \"react-router-dom\"\nimport { Navbar } from \"./Navbar\";\nimport { AboutPage } from \"./pages/AboutPage\";\nimport { TodoPage } from \"./pages/TodoPage\";\n\nconst App: React.FC = () => {\n  return (\n    <BrowserRouter>\n      <Navbar />\n      <div className=\"container\">\n        <Switch>\n          <Route component={TodoPage} path={\"/TS-todo/\"} exact />\n          <Route component={AboutPage} path={\"/TS-todo/about\"} />\n        </Switch>\n      </div>\n    </BrowserRouter>\n  );\n};\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}